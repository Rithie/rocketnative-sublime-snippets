<snippet>
  <content><![CDATA[
import Api from 'services/Api';
import SagaTester from 'redux-saga-tester';
import MockAdapter from 'axios-mock-adapter';

import ActionCreators, { Types, INITIAL_STATE } from 'store/ducks/${TM_FILENAME/(.+)(\.spec\.js)/$1/}';
// import { sagaAction } from 'store/sagas/${TM_FILENAME/(.+)(\.spec\.js)/$1/}';

// const fixtureApi = require('./fixtures/${TM_FILENAME/(.+)(\.spec\.js)/$1/}.json');

describe('${TM_FILENAME/(.+)(\.spec\.js)/$1/} SAGA', () => {
  let sagaTester = null;
  let apiMock = null;

  beforeEach(() => {
    sagaTester = new SagaTester(INITIAL_STATE);
    apiMock = new MockAdapter(Api.axiosInstance);
  });

  it('should success', async () => {
    // apiMock.onGet('/${TM_FILENAME/(.+)(\.spec\.js)/$1/}').reply(config => [200, fixtureApi[config.url]]);

    // sagaTester.start(sagaAction);
    // sagaTester.dispatch(ActionCreators.action());

    // await sagaTester.waitFor(${TM_FILENAME/(^|-|\.js)(.?)|/\U\2\E/g}Types.PENDING_SUCCESS);

    // expect(sagaTester.getLatestCalledAction())
    //   .toEqual(ActionCreators.pendingSuccess(fixtureApi['/${TM_FILENAME/(.+)(\.spec\.js)/$1/}']));
  });
});


]]></content>
  <tabTrigger>rnts</tabTrigger>
  <scope>source.js,source.jsx</scope>
  <description>Create react-native saga test file</description>
</snippet>
